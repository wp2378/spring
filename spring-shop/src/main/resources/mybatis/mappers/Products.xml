<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sample.mapper.ProductMapper">

	<!-- 
		ProductMapper 인터페이스의
			void insertProduct(Product product) 추상메소드와 연관된 SQL구문이다.
			
			출력 : void		- resultType		- 없다.
			입력 : Product	- parameterType 	- com.sample.vo.Product
	 -->
	<insert id="insertProdcut" parameterType="com.sample.vo.Product">
		insert into shop_products
		(product_no, product_name, product_description, product_stock, product_price)
		values
		(products_seq.nextval, #{name}, #{description}, #{stock}, #{price})
	</insert>
	
	<!-- 
		ProductMapper 인터페이스의
			List<Product> getAllProduct(Product product) 추상메소드와 연관된 SQL구문이다.
			
			출력 : List<Product>	- resultType		- com.sample.vo.Product
			입렵 : 없음			- parameterType 	- 없다.
	 -->
	<select id="getAllProduct" resultType="com.sample.vo.Product">
		select
			product_no				as no,
			product_name			as name,
			product_description		as description,
			product_stock			as stock,
			product_price			as price,
			product_status			as status,
			product_filename		as filename,
			product_created_date	as createdDate,
			product_updated_date	as updatedDate
		from
			shop_products
		order by 
			product_no desc
	
	</select>
	
	<!-- 
		ProductMapper 인터페이스의
			List<Product> getProductByNo(int no) 추상메소드와 연관된 SQL구문이다.
			
			출력 : Product	- resultType		- com.sample.vo.Product
			입렵 : int		- parameterType 	- int
	 -->
	 <select id="getProductByNo" parameterType="int" resultType="com.sample.vo.Product">
		select
			product_no				as no,
			product_name			as name,
			product_description		as description,
			product_stock			as stock,
			product_price			as price,
			product_status			as status,
			product_filename		as filename,
			product_created_date	as createdDate,
			product_updated_date	as updatedDate
		from
			shop_products
		order by 
			product_no = #{value}
	
	</select>
	 
</mapper>