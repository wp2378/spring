<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd ">
    
  <!-- 
  	base-package에 지정된 패키지 및 그 모든 하위 패키지에서 
  	@Controller, @Service, @Repositoery, @Component 등의 어노테이션이 부착된 클래스를 스캔해서 스프링 컨테이너가 싱글턴 객체로 생성하게 한다.
   -->  
  <context:component-scan base-package="com.sample.dao, com.sample.service, com.sample.aop" />
  
  <!-- 
  		<aop:aspectj-autoproxy />
  			위의 태그를 등록하면 @Aspectj 스타일의 AOP적용이 가능해진다.
   -->
  <aop:aspectj-autoproxy />  
  
  <!-- 
  	<aop:config />
  		위의 태그는 XML 기반 AOP적용을 지원한다.
   -->
   
   <bean id="runningTimeCheckAdvice" class="com.sample.aop.RunningTimeCheckAdvice"></bean>
   
   <aop:config>
   		<aop:pointcut expression="execution(* com.sample.service.*.*(..))" id="servicePointcut"/>
   		<aop:aspect ref="runningTimeCheckAdvice">
   			<aop:around method="checkRunningTime" pointcut-ref="servicePointcut"/>
   		</aop:aspect>
   </aop:config>
</beans>